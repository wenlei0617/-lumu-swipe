{"version":3,"sources":["../../src/SwipeItem.tsx","../../src/hooks/useRect.ts","../../src/hooks/useSwipe.ts","../../src/hooks/useRefs.ts","../../src/SwipeDots.tsx","../../src/Swipe.tsx","../../src/hooks/useTouch.ts","../../src/hooks/useResize.ts","../../src/hooks/useVisibility.ts","../../src/hooks/useEventListener.ts","../../src/index.tsx","Basic.tsx","Change.tsx","Vertical.tsx","InitialSwipe.tsx","Api.tsx","App.tsx","index.tsx"],"names":["SwipeItem","vertical","useState","swipeItemRef","useRef","useImperativeHandle","ref","setOffset","itemStyle","useMemo","transform","offset","props","style","className","styles","useSwipe","options","loop","realCurrent","current","swipeRef","refs","index","el","useRefs","minCurrent","maxCurrent","count","loopDirection","useEffect","setStyle","dom","swiping","resetCurrent","size","slideTo","step","direction","includes","resetChild","fetureCurrent","Math","fetureOffset","requestAnimationFrame","setCurrent","next","prev","setRefs","loopMove","SwipeDots","Array","fill","map","key","Swipe","initialSwipe","duration","autoplay","touchable","showIndicators","timer","touch","startX","startY","deltaX","deltaY","time","reset","move","event","start","Date","end","tempDeltaX","tempDeltaY","timediff","getTime","getDelta","useTouch","React","deps","width","height","root","changeSize","rect","setSize","useRect","itemSize","itemKey","wrappStyle","onPlay","setTimeout","onPause","clearTimeout","onTouchEnd","delta","onSlideChange","listener","hidden","changeVisibility","setHidden","document","useVisibility","listenerOptions","target","useEventListener","passive","console","window","to","onTouchStart","onTouchMove","onTouchCancel","child","LumuSwipe","Basic","Fragment","Item","Change","Vertical","InitialSwipe","Api","onClick","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.06559768.chunk.js","sourcesContent":["import React, { useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { SwipeProps } from './Swipe';\r\nimport styles from './styles.module.less';\r\n\r\nexport interface SwipeItemRef {\r\n    setOffset: React.Dispatch<React.SetStateAction<number>>\r\n}\r\n\r\nexport interface SwipeItemProps {\r\n    readonly vertical?: SwipeProps['vertical'];\r\n    readonly style?: React.CSSProperties;\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport const SwipeItem = React.forwardRef<SwipeItemRef, SwipeItemProps>((props, ref) => {\r\n    const { children, style, vertical } = props;\r\n    const [offset, setOffset] = useState(0);\r\n    const swipeItemRef = useRef<HTMLDivElement>(null);\r\n    \r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            setOffset\r\n        }\r\n    });\r\n\r\n    const itemStyle = useMemo(() => {\r\n        return {\r\n            transform: offset ? `translate${props.vertical ? 'Y' : 'X'}(${offset}px)` : '',\r\n            ...style\r\n        }\r\n    }, [offset, style, vertical]);\r\n\r\n    return (\r\n        <div ref={swipeItemRef} className={styles['lumu-swipe__item']} style={itemStyle}>\r\n            {children}\r\n        </div>\r\n    )\r\n});\r\n\r\nSwipeItem.displayName = 'LumuSwipeItem';","import { useRef, useEffect, useState } from 'react';\r\n\r\nconst useRect = <T extends HTMLElement>(deps: React.DependencyList = []) => {\r\n    const [size, setSize] = useState({\r\n        width: 0, height: 0\r\n    });\r\n    const root = useRef<T>(null);\r\n\r\n    const changeSize = () => {\r\n        const rect = root.current?.getBoundingClientRect();\r\n        if (rect) {\r\n            setSize({\r\n                width: rect.width,\r\n                height: rect.height\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        changeSize();\r\n    }, deps);\r\n\r\n    return {\r\n        root,\r\n        size,\r\n        changeSize\r\n    }\r\n}\r\n\r\nexport default useRect;","import { useRef, useState, useMemo, useEffect } from 'react';\r\nimport { SwipeItemRef } from '../SwipeItem';\r\nimport useRefs from './useRefs';\r\n\r\ntype SwipeParams = {\r\n    count: number;\r\n    vertical: boolean;\r\n    duration: number;\r\n    size: number;\r\n    loop: boolean;\r\n}\r\n\r\ntype SlideToParams = Partial<{\r\n    step: number;\r\n    swiping: boolean;\r\n    offset: number;\r\n}>;\r\n\r\nconst useSwipe = (options: SwipeParams) => {\r\n    const { count, vertical, duration, size, loop } = options;\r\n    const [current, setCurrent] = useState(0);\r\n    const realCurrent = useMemo(() => (current + count) % count || 0, [current, count]);\r\n    const swipeRef = useRef<HTMLDivElement>(null);\r\n    const [refs, setRefs] = useRefs<SwipeItemRef>();\r\n    const minCurrent = useMemo(() => loop ? -1 : 0, [loop]);\r\n    const maxCurrent = useMemo(() => loop ? count : count - 1, [loop, count]);\r\n    const loopDirection = useRef(1);\r\n\r\n    useEffect(() => {\r\n        if (realCurrent === 0) {\r\n            loopDirection.current = 1;\r\n        }\r\n        if (realCurrent === count - 1) {\r\n            loopDirection.current = -1;\r\n        }\r\n    }, [realCurrent]);\r\n\r\n    const setStyle = (dom: HTMLDivElement | null, options: { swiping: boolean, offset: number }) => {\r\n        if (!dom) return;\r\n        const { swiping, offset } = options;\r\n        dom.style.transition = `all ${swiping ? 0 : duration}ms`;\r\n        dom.style.transform = `translate${vertical ? 'Y' : 'X'}(${offset}px)`;\r\n    }\r\n\r\n    const resetCurrent = () => {\r\n        setStyle(swipeRef.current, {\r\n            swiping: true, offset: -realCurrent * size\r\n        })\r\n    }\r\n\r\n    const resetChild = (step: number, offset: number) => {\r\n        let direction = '';\r\n        if (step < 0 || offset > 0) {\r\n            direction = 'left';\r\n        }\r\n        if (step > 0 || offset < 0) {\r\n            direction = 'right';\r\n        }\r\n        if ([-1, count - 1].includes(current)) {\r\n            refs[0].setOffset(direction === 'right' ? count * size : 0);\r\n            refs[refs.length - 1].setOffset(0);\r\n        }\r\n        if ([count, 0].includes(current)) {\r\n            refs[0].setOffset(0);\r\n            refs[refs.length - 1].setOffset(direction === 'right' ? 0 : -count * size)\r\n        }\r\n    }\r\n\r\n    const slideTo = ({ step = 0, swiping = false, offset = 0 }: SlideToParams) => {\r\n        if (count <= 1) return;\r\n        loop && resetChild(step, offset);\r\n        const fetureCurrent = Math.min(Math.max(realCurrent + step, minCurrent), maxCurrent);\r\n        const fetureOffset = -fetureCurrent * size + offset;\r\n        if (swiping) {\r\n            setStyle(swipeRef.current, {\r\n                swiping, offset: fetureOffset\r\n            });\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                requestAnimationFrame(() => {\r\n                    setStyle(swipeRef.current, {\r\n                        swiping, offset: fetureOffset\r\n                    });\r\n                })\r\n            })\r\n        }\r\n        setCurrent(fetureCurrent);\r\n    }\r\n\r\n    const next = () => {\r\n        resetCurrent();\r\n        slideTo({ step: 1 });\r\n    }\r\n\r\n    const prev = () => {\r\n        resetCurrent();\r\n        slideTo({ step: -1 });\r\n    }\r\n\r\n    const loopMove = () => {\r\n        if (loop) {\r\n            next();\r\n            return;\r\n        }\r\n        if (loopDirection.current === 1) {\r\n            next();\r\n        } else {\r\n            prev();\r\n        }\r\n    }\r\n\r\n    return {\r\n        swipeRef,\r\n        setRefs,\r\n        current: realCurrent,\r\n        slideTo,\r\n        next,\r\n        prev,\r\n        loopMove\r\n    }\r\n}\r\n\r\nexport default useSwipe;","import { useRef } from 'react';\r\n\r\nconst useRefs = <T>():[typeof refs.current, (index:number) => (el: T) => void] => {\r\n    const refs = useRef<T[]>([]);\r\n\r\n    const setRefs = (index:number) => (el: T) => {\r\n        refs.current[index] = el;\r\n    }\r\n\r\n    return [refs.current, setRefs];\r\n}\r\n\r\nexport default useRefs;","import React from 'react';\r\nimport style from './styles.module.less';\r\n\r\ninterface SwipeDotsProps {\r\n    current: number;\r\n    count: number;\r\n    vertical: boolean;\r\n}\r\n\r\nconst SwipeDots:React.FC<SwipeDotsProps> = (props) => {\r\n    const { current, vertical, count } = props;\r\n\r\n    if (count <= 1) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={vertical ? style['lumu-swipe__dots--vertical'] : style['lumu-swipe__dots']}>\r\n            {\r\n                new Array(count).fill(1).map((_, index) => (\r\n                    <div \r\n                        className={current === index ? style['lumu-swipe__dot'] + ' ' + style['lumu-swipe__dot--active'] : style['lumu-swipe__dot']}\r\n                        key={index}></div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeDots;","import React, { useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SwipeItem } from './SwipeItem';\r\nimport styles from './styles.module.less';\r\nimport useRect from './hooks/useRect';\r\nimport useSwipe from './hooks/useSwipe';\r\nimport useVisibility from './hooks/useVisibility';\r\nimport useEventListener from './hooks/useEventListener';\r\nimport useTouch from './hooks/useTouch';\r\nimport useResize from './hooks/useResize';\r\nimport SwipeDots from './SwipeDots';\r\n\r\nexport interface SwipeRef {\r\n    next: () => void;\r\n    prev: () => void;\r\n    slideTo: (to: number, swiping?: boolean) => void;\r\n}\r\n\r\nexport interface SwipeProps {\r\n    onSlideChange?: (current: number) => void;\r\n    autoplay?: number;\r\n    duration?: number;\r\n    initialSwipe?: number;\r\n    loop?: boolean;\r\n    showIndicators?: boolean;\r\n    vertical?: boolean;\r\n    touchable?: boolean;\r\n    style?: React.CSSProperties;\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport const Swipe = React.forwardRef<SwipeRef, SwipeProps>((props, ref) => {\r\n    const {\r\n        initialSwipe = 0,\r\n        vertical = false,\r\n        duration = 500,\r\n        autoplay = 3000,\r\n        touchable = true,\r\n        loop = true,\r\n        onSlideChange,\r\n        showIndicators = true\r\n    } = props;\r\n    const timer = useRef<NodeJS.Timeout | null>(null);\r\n    const touch = useTouch();\r\n    const count = useMemo(() => React.Children.count(props.children), [props.children]);\r\n    const { size, root, changeSize } = useRect<HTMLDivElement>([count]);\r\n    const itemSize = useMemo(() => vertical ? size.height : size.width, [size, vertical]);\r\n    const itemKey = useMemo(() => vertical ? 'height' : 'width', [vertical]);\r\n    const itemStyle = useMemo(() => ({ [itemKey]: itemSize }), [itemKey, itemSize]);\r\n    const wrappStyle = useMemo(() => ({ [itemKey]: itemSize * count }), [count, itemSize, itemKey]);\r\n\r\n    // 核心方法\r\n    const { \r\n        setRefs, \r\n        slideTo, \r\n        next, \r\n        prev, \r\n        current, \r\n        swipeRef, \r\n        loopMove \r\n    } = useSwipe({ count, vertical, duration, size: itemSize, loop });\r\n\r\n    const onPlay = () => {\r\n        if (count <= 1) return;\r\n        if (!autoplay) return;\r\n        timer.current = setTimeout(() => {\r\n            loopMove();\r\n        }, autoplay);\r\n    }\r\n\r\n    const onPause = () => {\r\n        timer.current && clearTimeout(timer.current);\r\n        timer.current = null;\r\n    }\r\n\r\n    const onTouchStart = (event: React.TouchEvent | TouchEvent) => {\r\n        if (!touchable) return; \r\n        onPause();\r\n        touch.start(event);\r\n    }\r\n\r\n    const onTouchMove = (event: React.TouchEvent | TouchEvent) => {\r\n        if (!touchable) return; \r\n        touch.move(event);\r\n        const { deltaX, deltaY } = touch.getDelta()\r\n        slideTo({ swiping: true, offset: vertical ? deltaY : deltaX });\r\n    }\r\n\r\n    const onTouchEnd = () => {\r\n        if (!touchable) return; \r\n        const { deltaX, time, deltaY } = touch.end();\r\n        const delta = vertical ? deltaY : deltaX;\r\n        const step = (itemSize / 2 < Math.abs(delta) || Math.abs(delta / time) > 0.25) ? (delta > 0 ? -1 : 1) : 0;\r\n        slideTo({ swiping: false, step });\r\n        onPlay();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (itemSize) {\r\n            slideTo({step: initialSwipe - current, swiping: true });\r\n        }\r\n    }, [itemSize, initialSwipe])\r\n\r\n    useEffect(() => {\r\n        if (itemSize) {\r\n            onPlay();\r\n        } \r\n        return () => {\r\n            onPause();\r\n        }\r\n    }, [count, autoplay, current, itemSize]);\r\n\r\n    useEffect(() => {\r\n        onSlideChange && onSlideChange(current)\r\n    }, [current]);\r\n\r\n    const hidden = useVisibility();\r\n    useEffect(() => {\r\n        hidden ? onPause() : onPlay();\r\n    }, [hidden]);\r\n\r\n    useEventListener('touchmove', (event) => {\r\n        if (vertical) {\r\n            event.preventDefault();\r\n        }\r\n    }, { passive: false, target: swipeRef.current });\r\n\r\n    useResize(() => {\r\n        onPause();\r\n        changeSize();\r\n        onPlay();\r\n    });\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            next() {\r\n                onPause();\r\n                next();\r\n                onPlay();\r\n            },\r\n            prev() {\r\n                onPause();\r\n                prev();\r\n                onPlay();\r\n            },\r\n            slideTo(to:number, swiping?:boolean) {\r\n                onPause();\r\n                slideTo({ step: to - current, swiping });\r\n                onPlay();\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={root}\r\n            onTouchStart={onTouchStart}\r\n            onTouchMove={onTouchMove}\r\n            onTouchCancel={onTouchEnd}\r\n            onTouchEnd={onTouchEnd}\r\n            style={props.style}\r\n            className={`${styles['lumu-swipe']}`}>\r\n            <div\r\n                ref={swipeRef}\r\n                style={wrappStyle}\r\n                className={`${styles['lumu-swipe__container']} ${vertical ? styles['lumu-swipe__vertical'] : ''}`}>\r\n                {\r\n                    React.Children.map(props.children, (child, index) => {\r\n                        if (!React.isValidElement(child)) return null;\r\n                        if (child.type !== SwipeItem) return null;\r\n                        return React.cloneElement(child, {\r\n                            style: itemStyle,\r\n                            vertical: vertical,\r\n                            ref: setRefs(index)\r\n                        })\r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                showIndicators && <SwipeDots current={current} vertical={vertical} count={count}/>\r\n            }\r\n        </div>\r\n    )\r\n});\r\n\r\nSwipe.displayName = 'LumuSwipe';","import { useRef } from 'react';\r\n\r\nconst useTouch = () => {\r\n    const startX = useRef<number>(0);\r\n    const startY = useRef<number>(0);\r\n    const deltaX = useRef<number>(0);\r\n    const deltaY = useRef<number>(0);\r\n    const time = useRef<number>(0);\r\n\r\n    const reset = () => {\r\n        startX.current = 0;\r\n        startY.current = 0;\r\n        deltaX.current = 0;\r\n        deltaY.current = 0;\r\n        time.current = 0;\r\n    }\r\n\r\n    const start = (event: React.TouchEvent | TouchEvent) => {\r\n        reset();\r\n        time.current = new Date().getTime();\r\n        startX.current = event.touches[0].clientX;\r\n        startY.current = event.touches[0].clientY;\r\n    }\r\n\r\n    const move = (event: React.TouchEvent | TouchEvent) => {\r\n        if (!time.current) return;\r\n        deltaX.current = event.touches[0].clientX - startX.current;\r\n        deltaY.current = event.touches[0].clientY - startY.current;\r\n    }\r\n\r\n    const end = () => {\r\n        const tempDeltaX = deltaX.current;\r\n        const tempDeltaY = deltaY.current;\r\n        const timediff = new Date().getTime() - time.current;\r\n        reset();\r\n        return {\r\n            deltaX: tempDeltaX,\r\n            deltaY: tempDeltaY,\r\n            time: timediff\r\n        }\r\n    }\r\n\r\n    const getDelta = () => {\r\n        return {\r\n            deltaX: deltaX.current,\r\n            deltaY: deltaY.current\r\n        }\r\n    }\r\n\r\n    return {\r\n        move, start, end, getDelta\r\n    }\r\n}\r\n\r\nexport default useTouch;","import { useEffect } from 'react';\r\n\r\nconst useResize = (listener: () => void) => {\r\n    useEffect(() => {\r\n        console.log(1);\r\n        window.addEventListener('resize', listener);\r\n        return () => {\r\n            window.removeEventListener('resize', listener);\r\n        };\r\n    }, [listener])\r\n}\r\n\r\nexport default useResize;","import { useEffect, useState } from 'react';\r\n\r\nconst useVisibility = () => {\r\n    const [hidden, setHidden] = useState(false);\r\n\r\n    const changeVisibility = () => {\r\n        setHidden(document.hidden);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('visibilitychange', changeVisibility);\r\n\r\n        return () => {\r\n            document.removeEventListener('visibilitychange', changeVisibility);\r\n        }\r\n    }, []);\r\n\r\n    return hidden;\r\n}\r\n\r\nexport default useVisibility;","import { useEffect } from 'react';\r\n\r\nconst useEventListener = (\r\n    type: string, \r\n    listener: EventListener, \r\n    options: AddEventListenerOptions & { target: any }\r\n) => {\r\n    const { target, ...listenerOptions } = options;\r\n    \r\n    useEffect(() => {\r\n        target?.addEventListener(type, listener, listenerOptions);\r\n        return () => {\r\n            target?.removeEventListener(type, listener, listenerOptions);\r\n        };\r\n    }, [target]);\r\n}\r\n\r\nexport default useEventListener;","import { Swipe } from \"./Swipe\";\nimport { SwipeItem } from \"./SwipeItem\";\n\ntype Component = typeof Swipe;\n\ninterface SwipeInterface extends Component {\n  Item: typeof SwipeItem\n} \n\nconst LumuSwipe = Swipe as SwipeInterface;\n\nLumuSwipe.Item = SwipeItem;\n\nexport default LumuSwipe;","import React from 'react';\r\nimport LumuSwipe from '@lumu/swipe'\r\n\r\nconst Basic = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"title\">基础用法</div>\r\n            <LumuSwipe>\r\n                <LumuSwipe.Item key={1}>\r\n                    <div className=\"block red\">1</div>\r\n                </LumuSwipe.Item>\r\n                <LumuSwipe.Item key={2}>\r\n                    <div className=\"block blue\">2</div>\r\n                </LumuSwipe.Item>\r\n                <LumuSwipe.Item key={3}>\r\n                    <div className=\"block green\">3</div>\r\n                </LumuSwipe.Item>\r\n            </LumuSwipe>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Basic;","import React, { useState } from 'react';\r\nimport LumuSwipe from '@lumu/swipe'\r\n\r\nconst Change = () => {\r\n    const [current, setCurrent] = useState(0);\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"title\">监听change事件</div>\r\n            <LumuSwipe onSlideChange={setCurrent}>\r\n                <LumuSwipe.Item key={1}>\r\n                    <div className=\"block red\">1</div>\r\n                </LumuSwipe.Item>\r\n                <LumuSwipe.Item key={2}>\r\n                    <div className=\"block blue\">2</div>\r\n                </LumuSwipe.Item>\r\n                <LumuSwipe.Item key={3}>\r\n                    <div className=\"block green\">3</div>\r\n                </LumuSwipe.Item>\r\n            </LumuSwipe>\r\n            <div className=\"desc\">当前索引：{current}</div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Change;","import React from 'react';\r\nimport LumuSwipe from '@lumu/swipe'\r\n\r\nconst Vertical = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"title\">纵向滚动</div>\r\n            <LumuSwipe vertical style={{height: 200}}>\r\n                <LumuSwipe.Item key={1}>\r\n                    <div className=\"block red\">1</div>\r\n                </LumuSwipe.Item>\r\n                <LumuSwipe.Item key={2}>\r\n                    <div className=\"block blue\">2</div>\r\n                </LumuSwipe.Item>\r\n                <LumuSwipe.Item key={3}>\r\n                    <div className=\"block green\">3</div>\r\n                </LumuSwipe.Item>\r\n            </LumuSwipe>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Vertical;","import React from 'react';\r\nimport LumuSwipe from '@lumu/swipe'\r\n\r\nconst InitialSwipe = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"title\">指定索引</div>\r\n            <LumuSwipe autoplay={0} initialSwipe={1}>\r\n                <LumuSwipe.Item key={1}>\r\n                    <div className=\"block red\">1</div>\r\n                </LumuSwipe.Item>\r\n                <LumuSwipe.Item key={2}>\r\n                    <div className=\"block blue\">2</div>\r\n                </LumuSwipe.Item>\r\n                <LumuSwipe.Item key={3}>\r\n                    <div className=\"block green\">3</div>\r\n                </LumuSwipe.Item>\r\n            </LumuSwipe>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InitialSwipe;","import React, { useRef } from 'react';\r\nimport LumuSwipe from '@lumu/swipe'\r\nimport { SwipeRef } from '../../dist/Swipe';\r\n\r\nconst Api = () => {\r\n    const swipeRef = useRef<SwipeRef>(null);\r\n\r\n    const next = () => {\r\n        swipeRef.current?.next();\r\n    }\r\n\r\n    const prev = () => {\r\n        swipeRef.current?.prev();\r\n    }\r\n\r\n    const slideTo = () => {\r\n        swipeRef.current?.slideTo(1);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"title\">接口操作</div>\r\n            <LumuSwipe ref={swipeRef} autoplay={0}>\r\n                <LumuSwipe.Item key={1}>\r\n                    <div className=\"block red\">1</div>\r\n                </LumuSwipe.Item>\r\n                <LumuSwipe.Item key={2}>\r\n                    <div className=\"block blue\">2</div>\r\n                </LumuSwipe.Item>\r\n                <LumuSwipe.Item key={3}>\r\n                    <div className=\"block green\">3</div>\r\n                </LumuSwipe.Item>\r\n            </LumuSwipe>\r\n            <div className=\"desc\">\r\n                <button onClick={prev}>上一个</button>\r\n                <button onClick={next}>下一个</button>\r\n                <button onClick={slideTo}>指定跳到索引1</button>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Api;","import React from 'react'\nimport '@lumu/swipe/dist/index.css'\nimport Basic from './Basic'\nimport Change from './Change'\nimport Vertical from './Vertical'\nimport InitialSwipe from './InitialSwipe'\nimport Api from './Api'\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Basic/>\n      <Change/>\n      <InitialSwipe/>\n      <Vertical/>\n      <Api/>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}